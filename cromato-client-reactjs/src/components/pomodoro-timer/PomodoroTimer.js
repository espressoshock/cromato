import { Component } from 'react';
import React from 'react';
import './PomodoroTimer.css';

import CountUp from 'react-countup';

class PomodoroTimer extends Component {
  state = {
    states: ['idle', 'ready', 'active', 'working', 'task-expanded', 'break'],
    cTask: {
      id: undefined,
      name: undefined,
      dPomodoro: 25,
      cPomodoros: 1,
      tPomodoros: 1,
    },
    timerStart: 0.0,
    timerEnd: 25.0,
    timerDuration: 1.4,
    timerEasing: true,
    cTaskName: '',
    cState: undefined,
    counterCharged: false,
    working: false,
    timerIntervalRef: undefined,
    minutes: 0,
    seconds: 0,
  };
  constructor(props) {
    super(props);
    this.taskNameField = React.createRef();
    this.pomodoroTCounter = React.createRef();
  }
  componentDidMount() {
    this.setState({ cState: 0 });
    //pause pomodoro textual counter
    this.pomodoroTCounter.current.pauseResume();

    //on counter timer start
    this.pomodoroTCounter.current.containerRef.current.addEventListener(
      'click',
      () => {
        this.onCounterTimerStart();
      }
    );
  }

  getTimerState = () => {
    return this.state.states[this.state.cState];
  };
  onMouseEnter = (e) => {
    //go to next state

    if (!this.state.working && this.state.cState < 4)
      this.setState({ cState: this.state.cState + 1 });

    //focus task field
    this.taskNameField.current.focus();
  };
  onMouseLeave = (e) => {
    console.log('log', this.state.cState);
    //=TODO, this can be simplified
    switch (this.state.cState) {
      case 1:
        this.setState({ cState: 0 });
        break;
      case 2:
        this.setState({ cState: 1 });
        break;
      case 3:
        if (!this.state.working) this.setState({ cState: 2 });
        break;
      default:
    }
  };
  handleTaskNameChange = (e) => {
    this.setState({ cTaskName: e.target.value });

    //update counter charge state
    if (e.target.value.length <= 0) this.setState({ counterCharged: false });

    //go to active state
    if (e.target.value.length > 0 && this.state.cState <= 2) {
      this.setState({ cState: 2 });
      setTimeout(() => {
        this.pomodoroTCounter.current.update(25);
      }, 100);
    }
  };

  onCounterCharged = () => {
    this.setState({ counterCharged: true });
  };
  onCounterTimerStart = () => {
    if (this.state.counterCharged) {
      //---> THIS LIB IS DOG SHIT //REWORK
      /*  this.setState({ counterCharged: false });
      this.setState({ timerStart: 25.0 });

      this.setState({ timerDuration: 16000 });
      this.setState({ timerEasing: false });
      setTimeout(() => {
        //  this.pomodoroTCounter.current.start();
        this.pomodoroTCounter.current.update(0);
      }, 1); */
      console.log(this.pomodoroTCounter.current.containerRef.current);
      this.setState({ counterCharged: false });
      this.setState({ cState: 3 });
      this.setState({ working: true });

      this.startTimer(
        60 * 25,
        this.pomodoroTCounter.current.containerRef.current
      );
    } else {
      if (this.state.cState === 3) {
        if (this.state.working) this.stopTimer();
        else
          this.resumeTimer(this.pomodoroTCounter.current.containerRef.current);
      }
    }
  };

  startTimer = (duration, display) => {
    console.log('start');
    let timer = duration,
      minutes,
      seconds;
    let si = setInterval(() => {
      minutes = parseInt(timer / 60, 10);
      seconds = parseInt(timer % 60, 10);
      this.setState({ minutes: minutes });
      this.setState({ seconds: seconds });

      minutes = minutes < 10 ? '0' + minutes : minutes;
      seconds = seconds < 10 ? '0' + seconds : seconds;

      display.textContent = minutes + ':' + seconds;

      if (--timer < 0) {
        timer = duration;
      }
    }, 1000);
    this.setState({ timerIntervalRef: si });
  };
  stopTimer = () => {
    console.log('stop');
    this.setState({ working: false });
    clearInterval(this.state.timerIntervalRef);
  };
  resumeTimer = (display) => {
    let duration = this.state.minutes * 60 + this.state.seconds;
    console.log('resume', duration);
    let timer = duration,
      minutes,
      seconds;
    let si = setInterval(() => {
      minutes = parseInt(timer / 60, 10);
      seconds = parseInt(timer % 60, 10);
      this.setState({ minutes: minutes });
      this.setState({ seconds: seconds });

      minutes = minutes < 10 ? '0' + minutes : minutes;
      seconds = seconds < 10 ? '0' + seconds : seconds;

      display.textContent = minutes + ':' + seconds;

      if (--timer < 0) {
        timer = duration;
      }
    }, 1000);
    this.setState({ timerIntervalRef: si });
    this.setState({ working: true });
  };

  arrowControlClicked = () => {
    console.log('clicked');
    this.stopTimer();
  };

  //states: idle, ready, active, task-expanded, break
  render() {
    return (
      <div className={`pomodoro-timer ${this.getTimerState()}`}>
        <div
          className="svg-wrapper"
          onMouseEnter={this.onMouseEnter}
          onMouseLeave={this.onMouseLeave}
        >
          <CountUp
            className={`pomodoro-text-counter ${
              this.state.counterCharged ? 'charged' : ''
            }`}
            start={this.state.timerStart || 0.0}
            end={this.state.timerEnd || 25.0}
            duration={this.state.timerDuration}
            decimals={2}
            decimal=":"
            redraw={true}
            useEasing={this.state.timerEasing}
            preserveValue={false}
            formattingFn={(n) => {
              return n < 1
                ? '00:00'
                : n < 10
                ? '0' + (n + '').replace('.', ':')
                : n === 25
                ? '25:00'
                : (n + '').replace('.', ':');
            }}
            onEnd={() => this.onCounterCharged()}
            ref={this.pomodoroTCounter}
          />

          <div className="inner-panel"></div>
          <svg xmlns="http://www.w3.org/2000/svg" width="807px" height="740px">
            <clipPath id="timerbar-clip">
              <path
                fill-rule="evenodd"
                fill="rgb(131, 13, 38)"
                d="M765.813,0.798 L765.813,22.487 C765.890,23.048 765.933,23.704 765.933,24.479 C765.933,42.729 772.980,60.351 772.980,60.351 L772.765,60.273 C773.507,62.281 773.980,64.650 774.025,67.466 C773.982,67.874 773.931,68.272 773.887,68.679 L0.812,68.679 C0.769,68.272 0.717,67.874 0.675,67.466 C0.720,64.650 1.193,62.281 1.935,60.273 L1.720,60.351 C1.720,60.351 7.732,45.304 8.647,28.619 L8.647,0.798 L765.813,0.798 Z"
              ></path>
            </clipPath>
            <g className="top-sect">
              <g className="top-sect-anim">
                <path
                  fill-rule="evenodd"
                  fill="rgb(133, 17, 44)"
                  d="M781.813,367.793 L788.980,365.164 C788.980,365.164 787.061,369.967 785.226,377.148 C781.108,383.419 774.016,387.563 765.953,387.563 L40.766,387.563 C32.680,387.563 25.572,383.395 21.458,377.095 C19.722,370.306 17.916,365.662 17.736,365.204 C17.736,365.193 17.736,365.181 17.735,365.169 L24.647,367.705 L24.647,348.050 C28.803,343.981 34.490,341.469 40.766,341.469 L765.953,341.469 C772.100,341.469 777.681,343.880 781.813,347.803 L781.813,367.793 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(192, 34, 67)"
                  d="M803.434,316.483 C802.509,324.314 799.120,348.285 790.901,363.242 C786.308,371.601 783.864,377.414 772.965,377.414 L703.782,377.414 L703.782,377.335 L403.350,377.335 L102.917,377.335 L102.917,377.414 L33.735,377.414 C22.835,377.414 20.392,371.601 15.798,363.242 C7.580,348.285 4.191,324.314 3.266,316.483 C-2.687,287.758 -0.609,249.996 24.767,205.659 C84.217,101.784 169.661,107.010 188.755,107.010 C207.849,107.010 403.350,107.010 403.350,107.010 C403.350,107.010 598.850,107.010 617.944,107.010 C637.039,107.010 722.482,101.784 781.933,205.659 C807.308,249.996 809.386,287.758 803.434,316.483 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(227, 56, 62)"
                  d="M444.347,375.413 C425.619,375.413 405.373,376.156 384.207,377.335 L102.917,377.335 L102.917,377.414 L33.735,377.414 C22.835,377.414 20.392,371.601 15.798,363.242 C7.580,348.285 4.191,324.314 3.266,316.483 C-2.687,287.758 -0.609,249.996 24.767,205.659 C84.217,101.784 169.661,107.010 188.755,107.010 C201.844,107.010 297.816,107.010 356.896,107.010 C373.688,119.582 384.132,139.724 384.132,172.349 C384.132,231.388 411.132,222.314 434.738,222.314 C449.902,222.314 473.305,199.214 489.188,176.192 C505.070,153.171 554.019,114.657 573.104,202.456 C592.189,290.256 600.781,375.413 444.347,375.413 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(251, 112, 109)"
                  d="M91.387,240.251 C91.387,240.251 78.067,347.188 147.118,333.135 C216.168,319.082 260.633,274.162 264.344,235.767 C268.055,197.371 239.494,179.356 197.723,180.677 C155.953,181.997 93.898,206.757 91.387,240.251 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(255, 196, 182)"
                  d="M85.622,237.688 C85.622,237.688 90.238,276.724 136.228,261.390 C182.217,246.055 192.091,226.759 175.944,201.816 C159.797,176.873 118.979,177.930 97.152,201.816 C81.988,218.410 85.622,237.688 85.622,237.688 Z"
                />
              </g>
            </g>
            <g className="bottom-sect">
              <g className="bottom-sect-anim">
                <path
                  fill-rule="evenodd"
                  fill="rgb(156, 31, 65)"
                  d="M789.060,457.677 C789.033,457.801 789.008,457.922 788.980,458.048 C788.353,460.764 788.122,462.776 788.208,464.196 C752.614,721.508 511.707,740.810 430.224,739.874 L430.254,739.904 L382.851,739.904 L382.967,739.752 C308.713,741.708 55.087,728.747 18.492,464.196 C18.578,462.776 18.347,460.764 17.720,458.048 C17.691,457.922 17.667,457.801 17.639,457.677 C17.293,454.862 16.972,452.019 16.675,449.148 C16.941,432.554 31.813,431.144 31.813,431.144 L403.350,431.144 L774.887,431.144 C774.887,431.144 789.759,432.554 790.025,449.148 C789.727,452.019 789.406,454.862 789.060,457.677 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(192, 34, 67)"
                  d="M493.031,683.533 C484.381,668.547 504.684,608.772 553.246,617.553 C601.808,626.333 615.504,677.955 575.026,695.063 C534.547,712.171 505.426,705.007 493.031,683.533 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(255, 196, 182)"
                  d="M564.776,672.002 C564.776,672.002 545.726,649.841 583.353,638.692 C604.648,632.382 605.936,650.809 605.133,654.706 C604.329,658.604 589.594,707.386 564.776,672.002 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(191, 33, 66)"
                  d="M567.339,597.695 C480.808,597.695 477.017,484.953 477.017,484.953 C477.017,484.953 532.116,461.836 596.377,434.144 L774.887,434.144 C774.887,434.144 786.185,432.219 789.261,443.487 C763.752,611.334 643.274,597.695 567.339,597.695 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(227, 56, 62)"
                  d="M753.747,496.483 C708.904,496.483 575.025,496.483 575.025,496.483 C575.025,496.483 522.226,493.135 492.391,553.495 C462.555,613.854 349.929,660.472 246.407,660.472 C171.934,660.472 86.892,645.159 43.383,556.237 C31.922,529.564 23.316,499.073 18.491,464.196 C18.578,462.776 18.347,460.764 17.720,458.048 C17.691,457.922 17.667,457.801 17.639,457.676 C17.293,454.862 16.972,452.019 16.675,449.148 C16.941,432.554 31.813,433.144 31.813,433.144 L403.350,433.144 L774.887,433.144 C774.887,433.144 789.759,432.554 790.025,449.148 C789.727,452.019 789.406,454.862 789.060,457.676 C789.033,457.801 789.008,457.922 788.980,458.048 C788.353,460.764 788.122,462.776 788.208,464.196 C787.802,467.129 787.361,470.020 786.903,472.892 C781.740,485.695 771.980,496.483 753.747,496.483 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(155, 21, 49)"
                  d="M790.025,449.148 C789.983,449.551 789.932,449.942 789.889,450.344 L16.810,450.344 C16.768,449.942 16.717,449.551 16.675,449.148 C16.720,446.333 17.193,443.963 17.935,441.955 L17.720,442.034 C17.720,442.034 24.766,424.412 24.766,406.161 C24.766,388.343 46.132,429.196 47.146,431.144 L403.350,431.144 L759.554,431.144 C760.567,429.196 781.933,388.343 781.933,406.161 C781.933,424.412 788.980,442.034 788.980,442.034 L788.765,441.955 C789.507,443.963 789.979,446.333 790.025,449.148 Z"
                />
                <path
                  fill-rule="evenodd"
                  opacity="0.541"
                  fill="rgb(133, 17, 44)"
                  d="M18.720,442.034 C18.720,442.034 18.721,442.031 18.721,442.031 L18.727,442.031 L18.720,442.034 ZM789.973,442.031 L789.979,442.031 C789.979,442.031 789.980,442.034 789.980,442.034 L789.973,442.031 ZM17.675,449.148 C17.720,446.367 18.184,444.024 18.910,442.031 L789.789,442.031 C790.516,444.024 790.980,446.367 791.025,449.148 C790.983,449.551 790.932,449.942 790.889,450.344 L17.810,450.344 C17.768,449.942 17.717,449.551 17.675,449.148 Z"
                ></path>
              </g>
            </g>
            <g className="controls">
              <g className="controls-anim">
                <path
                  className={`shelf-arrow-control ${
                    this.state.cState === 3 ? 'skip-enabled' : ''
                  } `}
                  onClick={() => this.arrowControlClicked()}
                  fill-rule="evenodd"
                  d="M373.883,321.604 C376.804,317.612 392.179,291.801 396.303,285.091 C400.428,278.381 407.660,279.523 410.396,283.810 C413.133,288.097 430.852,317.236 433.457,321.604 C436.062,325.973 434.436,334.416 428.333,334.416 C420.261,334.416 384.947,334.416 379.648,334.416 C374.349,334.416 369.305,327.862 373.883,321.604 Z"
                />
              </g>
            </g>
            <g className="peduncle-sect">
              <g className="peeduncle-sect-anim">
                <path
                  fill-rule="evenodd"
                  fill="rgb(69, 95, 108)"
                  d="M403.350,64.731 L567.979,35.265 C567.979,35.265 587.729,29.232 619.866,49.358 C652.003,69.483 694.814,97.401 694.814,97.401 C694.814,97.401 699.510,107.010 685.846,107.010 C672.182,107.010 403.350,107.010 403.350,107.010 L403.350,64.731 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(81, 128, 108)"
                  d="M403.350,64.731 L238.721,35.265 C238.721,35.265 218.971,29.232 186.834,49.358 C154.696,69.483 111.886,97.401 111.886,97.401 C111.886,97.401 107.189,107.010 120.854,107.010 C134.518,107.010 403.350,107.010 403.350,107.010 L403.350,64.731 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(130, 170, 81)"
                  d="M111.886,97.401 C111.886,97.401 154.696,69.483 186.834,49.358 C218.971,29.232 238.721,35.265 238.721,35.265 L274.262,41.626 C293.608,54.954 305.371,74.355 302.397,107.010 C224.570,107.010 128.864,107.010 120.854,107.010 C107.189,107.010 111.886,97.401 111.886,97.401 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(72, 122, 113)"
                  d="M685.846,107.010 C678.360,107.010 594.296,107.010 519.802,107.010 C514.337,106.514 510.036,106.466 507.138,107.010 C505.863,107.010 504.598,107.010 503.332,107.010 C503.687,98.724 506.558,65.263 529.605,42.133 L567.979,35.265 C567.979,35.265 587.729,29.232 619.866,49.358 C652.003,69.483 694.814,97.401 694.814,97.401 C694.814,97.401 699.510,107.010 685.846,107.010 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(72, 122, 113)"
                  d="M403.350,115.978 L338.651,115.978 C338.651,115.978 353.385,35.324 353.385,16.688 C353.385,-1.948 364.915,0.673 364.915,0.673 L403.350,0.673 L441.785,0.673 C441.785,0.673 453.315,-1.948 453.315,16.688 C453.315,35.324 468.048,115.978 468.048,115.978 L403.350,115.978 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(102, 148, 94)"
                  d="M379.008,28.859 C379.008,58.943 382.354,92.667 373.052,115.978 L346.609,115.978 C344.679,111.706 342.875,106.724 341.275,101.250 C345.511,77.079 353.385,30.312 353.385,16.688 C353.385,-1.948 364.915,0.673 364.915,0.673 L403.350,0.673 L406.382,0.673 C392.293,4.214 379.008,12.018 379.008,28.859 Z"
                />
                <path
                  fill-rule="evenodd"
                  fill="rgb(130, 170, 81)"
                  d="M480.860,127.508 C480.860,127.508 412.667,221.112 409.756,225.517 C406.844,229.923 403.350,229.653 403.350,229.653 C403.350,229.653 399.856,229.923 396.944,225.517 C394.032,221.112 325.840,127.508 325.840,127.508 C325.840,127.508 310.665,91.656 366.837,86.511 C384.080,84.932 403.350,83.949 403.350,83.949 C403.350,83.949 422.620,84.932 439.863,86.511 C496.035,91.656 480.860,127.508 480.860,127.508 Z"
                />
              </g>
            </g>
            <g className="timer-scale">
              <path
                className="background"
                fill-rule="evenodd"
                fill="rgb(131, 13, 38)"
                d="M765.813,0.798 L765.813,22.487 C765.890,23.048 765.933,23.704 765.933,24.479 C765.933,42.729 772.980,60.351 772.980,60.351 L772.765,60.273 C773.507,62.281 773.980,64.650 774.025,67.466 C773.982,67.874 773.931,68.272 773.887,68.679 L0.812,68.679 C0.769,68.272 0.717,67.874 0.675,67.466 C0.720,64.650 1.193,62.281 1.935,60.273 L1.720,60.351 C1.720,60.351 7.732,45.304 8.647,28.619 L8.647,0.798 L765.813,0.798 Z"
              />
              <g className="interactive-timerbar">
                <g
                  className={`i-timerbar-w ${
                    this.state.cState === 3 ? 'working' : ''
                  } ${!this.state.working ? 'paused' : ''}`}
                >
                  <path
                    fill-rule="evenodd"
                    className="scale"
                    fill="rgb(155, 21, 49)"
                    d="M1252.156,55.031 L1252.156,34.234 C1252.156,30.342 1255.311,27.187 1259.203,27.187 C1263.095,27.187 1266.250,30.342 1266.250,34.234 L1266.250,55.031 L1252.156,55.031 ZM1225.906,43.500 C1225.906,39.617 1229.054,36.469 1232.938,36.469 C1236.821,36.469 1239.969,39.617 1239.969,43.500 L1239.969,55.031 L1225.906,55.031 L1225.906,43.500 ZM1200.250,34.241 C1200.250,30.346 1203.408,27.187 1207.304,27.187 L1207.321,27.187 C1211.217,27.187 1214.375,30.346 1214.375,34.241 L1214.375,55.031 L1200.250,55.031 L1200.250,34.241 ZM1172.719,43.509 C1172.719,39.621 1175.871,36.469 1179.759,36.469 L1179.772,36.469 C1183.661,36.469 1186.813,39.621 1186.813,43.509 L1186.813,55.031 L1172.719,55.031 L1172.719,43.509 ZM1147.094,34.228 C1147.094,30.339 1150.246,27.187 1154.134,27.187 L1154.147,27.187 C1158.036,27.187 1161.187,30.339 1161.187,34.228 L1161.187,55.031 L1147.094,55.031 L1147.094,34.228 ZM1122.750,43.522 C1122.750,39.627 1125.908,36.469 1129.804,36.469 L1129.821,36.469 C1133.717,36.469 1136.875,39.627 1136.875,43.522 L1136.875,55.031 L1122.750,55.031 L1122.750,43.522 ZM1097.125,34.241 C1097.125,30.346 1100.283,27.187 1104.179,27.187 L1104.196,27.187 C1108.092,27.187 1111.250,30.346 1111.250,34.241 L1111.250,55.031 L1097.125,55.031 L1097.125,34.241 ZM1069.594,43.509 C1069.594,39.621 1072.746,36.469 1076.634,36.469 L1076.647,36.469 C1080.536,36.469 1083.687,39.621 1083.687,43.509 L1083.687,55.031 L1069.594,55.031 L1069.594,43.509 ZM1043.969,34.219 C1043.969,30.335 1047.117,27.187 1051.000,27.187 C1054.883,27.187 1058.031,30.335 1058.031,34.219 L1058.031,55.031 L1043.969,55.031 L1043.969,34.219 ZM1017.719,43.500 C1017.719,39.617 1020.867,36.469 1024.750,36.469 C1028.633,36.469 1031.781,39.617 1031.781,43.500 L1031.781,55.031 L1017.719,55.031 L1017.719,43.500 ZM992.094,34.219 C992.094,30.335 995.242,27.187 999.125,27.187 C1003.008,27.187 1006.156,30.335 1006.156,34.219 L1006.156,55.031 L992.094,55.031 L992.094,34.219 ZM964.531,43.516 C964.531,39.624 967.686,36.469 971.578,36.469 C975.470,36.469 978.625,39.624 978.625,43.516 L978.625,55.031 L964.531,55.031 L964.531,43.516 ZM938.906,34.234 C938.906,30.342 942.061,27.187 945.953,27.187 C949.845,27.187 953.000,30.342 953.000,34.234 L953.000,55.031 L938.906,55.031 L938.906,34.234 ZM913.938,43.516 C913.938,39.624 917.092,36.469 920.984,36.469 C924.876,36.469 928.031,39.624 928.031,43.516 L928.031,55.031 L913.938,55.031 L913.938,43.516 ZM888.281,34.241 C888.281,30.346 891.439,27.187 895.335,27.187 L895.353,27.187 C899.248,27.187 902.406,30.346 902.406,34.241 L902.406,55.031 L888.281,55.031 L888.281,34.241 ZM860.750,43.509 C860.750,39.621 863.902,36.469 867.790,36.469 L867.804,36.469 C871.692,36.469 874.844,39.621 874.844,43.509 L874.844,55.031 L860.750,55.031 L860.750,43.509 ZM835.125,34.228 C835.125,30.339 838.277,27.187 842.165,27.187 L842.179,27.187 C846.067,27.187 849.219,30.339 849.219,34.228 L849.219,55.031 L835.125,55.031 L835.125,34.228 ZM808.875,43.509 C808.875,39.621 812.027,36.469 815.915,36.469 L815.929,36.469 C819.817,36.469 822.969,39.621 822.969,43.509 L822.969,55.031 L808.875,55.031 L808.875,43.509 ZM783.250,34.228 C783.250,30.339 786.402,27.187 790.290,27.187 L790.304,27.187 C794.192,27.187 797.344,30.339 797.344,34.228 L797.344,55.031 L783.250,55.031 L783.250,34.228 ZM755.687,43.522 C755.687,39.627 758.846,36.469 762.741,36.469 L762.759,36.469 C766.654,36.469 769.812,39.627 769.812,43.522 L769.812,55.031 L755.687,55.031 L755.687,43.522 ZM730.094,34.228 C730.094,30.339 733.246,27.187 737.134,27.187 L737.147,27.187 C741.036,27.187 744.187,30.339 744.187,34.228 L744.187,55.031 L730.094,55.031 L730.094,34.228 ZM705.750,43.500 C705.750,39.617 708.898,36.469 712.781,36.469 C716.665,36.469 719.812,39.617 719.812,43.500 L719.812,55.031 L705.750,55.031 L705.750,43.500 ZM680.125,34.219 C680.125,30.335 683.273,27.187 687.156,27.187 C691.040,27.187 694.188,30.335 694.188,34.219 L694.188,55.031 L680.125,55.031 L680.125,34.219 ZM652.562,43.516 C652.562,39.624 655.717,36.469 659.609,36.469 C663.501,36.469 666.656,39.624 666.656,43.516 L666.656,55.031 L652.562,55.031 L652.562,43.516 ZM626.969,34.219 C626.969,30.335 630.117,27.187 634.000,27.187 C637.883,27.187 641.031,30.335 641.031,34.219 L641.031,55.031 L626.969,55.031 L626.969,34.219 ZM600.687,43.516 C600.687,39.624 603.842,36.469 607.734,36.469 C611.626,36.469 614.781,39.624 614.781,43.516 L614.781,55.031 L600.687,55.031 L600.687,43.516 ZM575.063,34.234 C575.063,30.342 578.217,27.187 582.109,27.187 C586.001,27.187 589.156,30.342 589.156,34.234 L589.156,55.031 L575.063,55.031 L575.063,34.234 ZM547.500,43.509 C547.500,39.621 550.652,36.469 554.540,36.469 L554.554,36.469 C558.442,36.469 561.594,39.621 561.594,43.509 L561.594,55.031 L547.500,55.031 L547.500,43.509 ZM522.156,55.031 L521.875,55.031 L521.875,34.241 C521.875,30.346 525.033,27.187 528.929,27.187 L528.946,27.187 C528.989,27.187 529.032,27.188 529.075,27.189 C529.117,27.188 529.160,27.187 529.203,27.187 C533.095,27.187 536.250,30.342 536.250,34.234 L536.250,55.031 L536.000,55.031 L522.156,55.031 ZM495.906,43.500 C495.906,39.617 499.054,36.469 502.937,36.469 C506.821,36.469 509.969,39.617 509.969,43.500 L509.969,55.031 L495.906,55.031 L495.906,43.500 ZM470.250,34.241 C470.250,30.346 473.408,27.187 477.304,27.187 L477.321,27.187 C481.217,27.187 484.375,30.346 484.375,34.241 L484.375,55.031 L470.250,55.031 L470.250,34.241 ZM442.719,43.509 C442.719,39.621 445.871,36.469 449.759,36.469 L449.772,36.469 C453.661,36.469 456.812,39.621 456.812,43.509 L456.812,55.031 L442.719,55.031 L442.719,43.509 ZM417.094,34.228 C417.094,30.339 420.246,27.187 424.134,27.187 L424.147,27.187 C428.036,27.187 431.188,30.339 431.188,34.228 L431.188,55.031 L417.094,55.031 L417.094,34.228 ZM392.750,43.522 C392.750,39.627 395.908,36.469 399.804,36.469 L399.821,36.469 C403.717,36.469 406.875,39.627 406.875,43.522 L406.875,55.031 L392.750,55.031 L392.750,43.522 ZM367.125,34.241 C367.125,30.346 370.283,27.187 374.179,27.187 L374.196,27.187 C378.092,27.187 381.250,30.346 381.250,34.241 L381.250,55.031 L367.125,55.031 L367.125,34.241 ZM339.594,43.509 C339.594,39.621 342.746,36.469 346.634,36.469 L346.647,36.469 C350.536,36.469 353.688,39.621 353.688,43.509 L353.688,55.031 L339.594,55.031 L339.594,43.509 ZM313.969,34.219 C313.969,30.335 317.117,27.187 321.000,27.187 C324.883,27.187 328.031,30.335 328.031,34.219 L328.031,55.031 L313.969,55.031 L313.969,34.219 ZM287.719,43.500 C287.719,39.617 290.867,36.469 294.750,36.469 C298.633,36.469 301.781,39.617 301.781,43.500 L301.781,55.031 L287.719,55.031 L287.719,43.500 ZM262.094,34.219 C262.094,30.335 265.242,27.187 269.125,27.187 C273.008,27.187 276.156,30.335 276.156,34.219 L276.156,55.031 L262.094,55.031 L262.094,34.219 ZM234.531,43.516 C234.531,39.624 237.686,36.469 241.578,36.469 C245.470,36.469 248.625,39.624 248.625,43.516 L248.625,55.031 L234.531,55.031 L234.531,43.516 ZM208.906,34.234 C208.906,30.342 212.061,27.187 215.953,27.187 C219.845,27.187 223.000,30.342 223.000,34.234 L223.000,55.031 L208.906,55.031 L208.906,34.234 ZM183.937,43.516 C183.937,39.624 187.092,36.469 190.984,36.469 C194.876,36.469 198.031,39.624 198.031,43.516 L198.031,55.031 L183.937,55.031 L183.937,43.516 ZM158.281,34.241 C158.281,30.346 161.439,27.187 165.335,27.187 L165.353,27.187 C169.248,27.187 172.406,30.346 172.406,34.241 L172.406,55.031 L158.281,55.031 L158.281,34.241 ZM130.750,43.509 C130.750,39.621 133.902,36.469 137.790,36.469 L137.804,36.469 C141.692,36.469 144.844,39.621 144.844,43.509 L144.844,55.031 L130.750,55.031 L130.750,43.509 ZM105.125,34.228 C105.125,30.339 108.277,27.187 112.165,27.187 L112.179,27.187 C116.067,27.187 119.219,30.339 119.219,34.228 L119.219,55.031 L105.125,55.031 L105.125,34.228 ZM78.875,43.509 C78.875,39.621 82.027,36.469 85.915,36.469 L85.929,36.469 C89.817,36.469 92.969,39.621 92.969,43.509 L92.969,55.031 L78.875,55.031 L78.875,43.509 ZM53.250,34.228 C53.250,30.339 56.402,27.187 60.290,27.187 L60.304,27.187 C64.192,27.187 67.344,30.339 67.344,34.228 L67.344,55.031 L53.250,55.031 L53.250,34.228 ZM25.687,43.522 C25.687,39.627 28.846,36.469 32.741,36.469 L32.759,36.469 C36.654,36.469 39.813,39.627 39.813,43.522 L39.813,55.031 L25.687,55.031 L25.687,43.522 ZM0.094,34.228 C0.094,30.339 3.246,27.187 7.134,27.187 L7.147,27.187 C11.036,27.187 14.188,30.339 14.188,34.228 L14.188,55.031 L0.094,55.031 L0.094,34.228 Z"
                  />
                  <path
                    className="unit"
                    fill-rule="evenodd"
                    fill="rgb(255, 196, 182)"
                    d="M1262.726,6.601 C1263.418,5.910 1264.584,5.391 1265.902,5.391 C1268.344,5.391 1270.526,7.141 1270.526,10.058 C1270.526,13.126 1268.236,15.049 1264.757,15.049 C1262.251,15.049 1260.436,14.228 1259.204,12.889 L1260.911,10.750 C1261.884,11.765 1263.223,12.327 1264.736,12.327 C1266.443,12.327 1267.415,11.355 1267.415,10.188 C1267.415,8.913 1266.464,8.049 1264.822,8.049 C1263.634,8.049 1262.661,8.395 1261.797,9.216 L1259.658,8.654 L1259.658,0.379 L1269.554,0.379 L1269.554,3.079 L1262.726,3.079 L1262.726,6.601 ZM1246.197,12.392 C1252.095,8.027 1253.824,6.536 1253.824,4.765 C1253.824,3.512 1252.679,2.885 1251.490,2.885 C1249.848,2.885 1248.595,3.533 1247.623,4.549 L1245.872,2.518 C1247.277,0.897 1249.416,0.163 1251.425,0.163 C1254.493,0.163 1256.935,1.891 1256.935,4.765 C1256.935,7.228 1254.904,9.367 1251.166,12.089 L1257.043,12.089 L1257.043,14.790 L1246.197,14.790 L1246.197,12.392 ZM1218.681,14.790 L1215.613,14.790 L1215.613,11.808 L1208.721,11.808 L1208.721,9.389 L1214.446,0.379 L1218.681,0.379 L1218.681,9.108 L1220.539,9.108 L1220.539,11.808 L1218.681,11.808 L1218.681,14.790 ZM1215.613,3.101 L1211.724,9.108 L1215.613,9.108 L1215.613,3.101 ZM1196.231,12.392 C1202.130,8.027 1203.858,6.536 1203.858,4.765 C1203.858,3.512 1202.713,2.885 1201.525,2.885 C1199.883,2.885 1198.630,3.533 1197.657,4.549 L1195.907,2.518 C1197.312,0.897 1199.451,0.163 1201.460,0.163 C1204.528,0.163 1206.970,1.891 1206.970,4.765 C1206.970,7.228 1204.939,9.367 1201.201,12.089 L1207.078,12.089 L1207.078,14.790 L1196.231,14.790 L1196.231,12.392 ZM1159.846,15.049 C1157.188,15.049 1155.222,14.034 1154.163,12.738 L1155.762,10.685 C1156.756,11.722 1158.333,12.327 1159.738,12.327 C1161.488,12.327 1162.460,11.571 1162.460,10.490 C1162.460,9.345 1161.574,8.827 1159.565,8.827 C1158.960,8.827 1157.988,8.848 1157.771,8.870 L1157.771,6.104 C1158.031,6.126 1159.025,6.126 1159.565,6.126 C1161.164,6.126 1162.222,5.651 1162.222,4.592 C1162.222,3.447 1161.056,2.885 1159.543,2.885 C1158.160,2.885 1156.907,3.404 1155.892,4.376 L1154.358,2.453 C1155.524,1.135 1157.339,0.163 1159.867,0.163 C1163.238,0.163 1165.312,1.675 1165.312,4.073 C1165.312,5.888 1163.756,7.077 1162.158,7.358 C1163.627,7.509 1165.528,8.654 1165.528,10.815 C1165.528,13.299 1163.303,15.049 1159.846,15.049 ZM1141.782,12.392 C1147.680,8.027 1149.409,6.536 1149.409,4.765 C1149.409,3.512 1148.264,2.885 1147.075,2.885 C1145.433,2.885 1144.180,3.533 1143.208,4.549 L1141.458,2.518 C1142.862,0.897 1145.001,0.163 1147.011,0.163 C1150.079,0.163 1152.520,1.891 1152.520,4.765 C1152.520,7.228 1150.489,9.367 1146.751,12.089 L1152.628,12.089 L1152.628,14.790 L1141.782,14.790 L1141.782,12.392 ZM1104.781,12.392 C1110.680,8.027 1112.408,6.536 1112.408,4.765 C1112.408,3.512 1111.263,2.885 1110.075,2.885 C1108.433,2.885 1107.180,3.533 1106.207,4.549 L1104.457,2.518 C1105.862,0.897 1108.001,0.163 1110.010,0.163 C1113.078,0.163 1115.520,1.891 1115.520,4.765 C1115.520,7.228 1113.489,9.367 1109.751,12.089 L1115.628,12.089 L1115.628,14.790 L1104.781,14.790 L1104.781,12.392 ZM1091.817,12.392 C1097.715,8.027 1099.444,6.536 1099.444,4.765 C1099.444,3.512 1098.299,2.885 1097.110,2.885 C1095.468,2.885 1094.215,3.533 1093.243,4.549 L1091.493,2.518 C1092.897,0.897 1095.036,0.163 1097.045,0.163 C1100.113,0.163 1102.555,1.891 1102.555,4.765 C1102.555,7.228 1100.524,9.367 1096.786,12.089 L1102.663,12.089 L1102.663,14.790 L1091.817,14.790 L1091.817,12.392 ZM1058.187,4.333 L1055.788,6.774 L1054.038,4.938 L1058.575,0.379 L1061.255,0.379 L1061.255,14.790 L1058.187,14.790 L1058.187,4.333 ZM1041.851,12.392 C1047.750,8.027 1049.478,6.536 1049.478,4.765 C1049.478,3.512 1048.333,2.885 1047.145,2.885 C1045.503,2.885 1044.250,3.533 1043.277,4.549 L1041.527,2.518 C1042.932,0.897 1045.071,0.163 1047.080,0.163 C1050.148,0.163 1052.590,1.891 1052.590,4.765 C1052.590,7.228 1050.559,9.367 1046.821,12.089 L1052.698,12.089 L1052.698,14.790 L1041.851,14.790 L1041.851,12.392 ZM1002.648,7.595 C1002.648,3.879 1004.485,0.163 1008.611,0.163 C1012.717,0.163 1014.575,3.879 1014.575,7.595 C1014.575,11.312 1012.717,15.049 1008.611,15.049 C1004.485,15.049 1002.648,11.312 1002.648,7.595 ZM1008.611,2.885 C1006.537,2.885 1005.759,4.938 1005.759,7.595 C1005.759,10.253 1006.537,12.327 1008.611,12.327 C1010.664,12.327 1011.442,10.253 1011.442,7.595 C1011.442,4.938 1010.664,2.885 1008.611,2.885 ZM989.964,12.392 C995.863,8.027 997.591,6.536 997.591,4.765 C997.591,3.512 996.446,2.885 995.258,2.885 C993.616,2.885 992.363,3.533 991.390,4.549 L989.640,2.518 C991.045,0.897 993.184,0.163 995.193,0.163 C998.261,0.163 1000.703,1.891 1000.703,4.765 C1000.703,7.228 998.672,9.367 994.934,12.089 L1000.811,12.089 L1000.811,14.790 L989.964,14.790 L989.964,12.392 ZM949.063,15.028 C947.313,15.028 945.843,14.444 944.828,13.537 L946.189,11.182 C946.967,11.916 947.788,12.305 949.063,12.305 C951.439,12.305 952.671,10.318 952.671,8.243 C952.671,8.135 952.671,8.027 952.671,7.919 C951.980,8.892 950.532,9.777 948.955,9.777 C946.362,9.777 944.028,8.157 944.028,5.089 C944.028,2.280 946.275,0.141 949.560,0.141 C953.924,0.141 955.761,3.512 955.761,7.595 C955.761,11.938 953.319,15.028 949.063,15.028 ZM949.711,2.863 C948.069,2.863 947.161,3.987 947.161,4.981 C947.161,6.493 948.479,7.141 949.819,7.141 C950.899,7.141 951.958,6.645 952.649,5.802 C952.520,4.419 951.742,2.863 949.711,2.863 ZM938.886,4.333 L936.487,6.774 L934.737,4.938 L939.274,0.379 L941.954,0.379 L941.954,14.790 L938.886,14.790 L938.886,4.333 ZM899.962,15.049 C896.937,15.049 894.171,13.753 894.171,11.052 C894.171,9.302 895.532,7.963 897.261,7.358 C895.662,6.796 894.409,5.759 894.409,3.965 C894.409,1.265 897.282,0.163 899.962,0.163 C902.619,0.163 905.515,1.265 905.515,3.965 C905.515,5.759 904.240,6.796 902.641,7.358 C904.369,7.963 905.752,9.302 905.752,11.052 C905.752,13.731 902.987,15.049 899.962,15.049 ZM899.962,2.799 C898.536,2.799 897.520,3.404 897.520,4.441 C897.520,5.521 899.076,6.018 899.962,6.148 C900.848,6.018 902.382,5.521 902.382,4.441 C902.382,3.404 901.366,2.799 899.962,2.799 ZM899.962,8.740 C899.054,8.870 897.282,9.453 897.282,10.663 C897.282,11.722 898.449,12.413 899.962,12.413 C901.431,12.413 902.641,11.722 902.641,10.663 C902.641,9.453 900.848,8.870 899.962,8.740 ZM888.920,4.333 L886.522,6.774 L884.772,4.938 L889.309,0.379 L891.988,0.379 L891.988,14.790 L888.920,14.790 L888.920,4.333 ZM842.221,14.790 L847.384,3.079 L840.125,3.079 L840.125,0.379 L850.950,0.379 L850.950,2.518 L845.591,14.790 L842.221,14.790 ZM835.111,4.333 L832.713,6.774 L830.963,4.938 L835.500,0.379 L838.180,0.379 L838.180,14.790 L835.111,14.790 L835.111,4.333 ZM795.281,5.413 C797.874,5.413 800.186,7.033 800.186,10.102 C800.186,12.910 797.961,15.049 794.676,15.049 C790.290,15.049 788.454,11.679 788.454,7.617 C788.454,3.252 790.917,0.163 795.173,0.163 C796.923,0.163 798.393,0.768 799.430,1.653 L798.047,4.009 C797.269,3.274 796.448,2.885 795.173,2.885 C793.056,2.885 791.565,4.678 791.565,6.969 C791.565,7.077 791.565,7.163 791.587,7.271 C792.256,6.299 793.704,5.413 795.281,5.413 ZM794.504,12.327 C796.167,12.327 797.075,11.225 797.075,10.210 C797.075,8.697 795.778,8.049 794.395,8.049 C793.315,8.049 792.278,8.546 791.587,9.410 C791.716,10.793 792.494,12.327 794.504,12.327 ZM783.224,4.333 L780.826,6.774 L779.076,4.938 L783.613,0.379 L786.292,0.379 L786.292,14.790 L783.224,14.790 L783.224,4.333 ZM740.386,5.391 C742.827,5.391 745.010,7.141 745.010,10.058 C745.010,13.126 742.719,15.049 739.241,15.049 C736.734,15.049 734.919,14.228 733.688,12.889 L735.395,10.750 C736.367,11.765 737.707,12.327 739.219,12.327 C740.926,12.327 741.898,11.355 741.898,10.188 C741.898,8.913 740.948,8.049 739.306,8.049 C738.117,8.049 737.145,8.395 736.281,9.216 L734.142,8.654 L734.142,0.379 L744.037,0.379 L744.037,3.079 L737.210,3.079 L737.210,6.601 C737.901,5.910 739.068,5.391 740.386,5.391 ZM728.134,4.333 L725.736,6.774 L723.986,4.938 L728.523,0.379 L731.203,0.379 L731.203,14.790 L728.134,14.790 L728.134,4.333 ZM694.446,14.790 L691.378,14.790 L691.378,11.808 L684.485,11.808 L684.485,9.389 L690.211,0.379 L694.446,0.379 L694.446,9.108 L696.304,9.108 L696.304,11.808 L694.446,11.808 L694.446,14.790 ZM691.378,3.101 L687.488,9.108 L691.378,9.108 L691.378,3.101 ZM679.450,4.333 L677.052,6.774 L675.302,4.938 L679.839,0.379 L682.518,0.379 L682.518,14.790 L679.450,14.790 L679.450,4.333 ZM636.251,15.049 C633.593,15.049 631.627,14.034 630.568,12.738 L632.167,10.685 C633.161,11.722 634.738,12.327 636.143,12.327 C637.893,12.327 638.865,11.571 638.865,10.490 C638.865,9.345 637.979,8.827 635.970,8.827 C635.365,8.827 634.393,8.848 634.177,8.870 L634.177,6.104 C634.436,6.126 635.430,6.126 635.970,6.126 C637.569,6.126 638.628,5.651 638.628,4.592 C638.628,3.447 637.461,2.885 635.948,2.885 C634.566,2.885 633.312,3.404 632.297,4.376 L630.763,2.453 C631.930,1.135 633.744,0.163 636.272,0.163 C639.643,0.163 641.717,1.675 641.717,4.073 C641.717,5.888 640.162,7.077 638.563,7.358 C640.032,7.509 641.933,8.654 641.933,10.815 C641.933,13.299 639.708,15.049 636.251,15.049 ZM625.642,4.333 L623.243,6.774 L621.493,4.938 L626.030,0.379 L628.710,0.379 L628.710,14.790 L625.642,14.790 L625.642,4.333 ZM579.984,12.392 C585.882,8.027 587.611,6.536 587.611,4.765 C587.611,3.512 586.465,2.885 585.277,2.885 C583.635,2.885 582.382,3.533 581.410,4.549 L579.659,2.518 C581.064,0.897 583.203,0.163 585.212,0.163 C588.280,0.163 590.722,1.891 590.722,4.765 C590.722,7.228 588.691,9.367 584.953,12.089 L590.830,12.089 L590.830,14.790 L579.984,14.790 L579.984,12.392 ZM574.473,4.333 L572.075,6.774 L570.325,4.938 L574.862,0.379 L577.541,0.379 L577.541,14.790 L574.473,14.790 L574.473,4.333 ZM532.029,4.333 L529.631,6.774 L527.881,4.938 L532.418,0.379 L535.098,0.379 L535.098,14.790 L532.029,14.790 L532.029,4.333 ZM523.149,4.333 L520.750,6.774 L519.000,4.938 L523.537,0.379 L526.217,0.379 L526.217,14.790 L523.149,14.790 L523.149,4.333 ZM476.864,15.028 C475.113,15.028 473.644,14.444 472.629,13.537 L473.990,11.182 C474.768,11.916 475.589,12.305 476.864,12.305 C479.240,12.305 480.472,10.318 480.472,8.243 C480.472,8.135 480.472,8.027 480.472,7.919 C479.780,8.892 478.333,9.777 476.756,9.777 C474.163,9.777 471.829,8.157 471.829,5.089 C471.829,2.280 474.076,0.141 477.361,0.141 C481.725,0.141 483.562,3.512 483.562,7.595 C483.562,11.938 481.120,15.028 476.864,15.028 ZM477.512,2.863 C475.870,2.863 474.962,3.987 474.962,4.981 C474.962,6.493 476.280,7.141 477.620,7.141 C478.700,7.141 479.759,6.645 480.450,5.802 C480.321,4.419 479.543,2.863 477.512,2.863 ZM423.763,15.049 C420.738,15.049 417.972,13.753 417.972,11.052 C417.972,9.302 419.333,7.963 421.062,7.358 C419.463,6.796 418.210,5.759 418.210,3.965 C418.210,1.265 421.083,0.163 423.763,0.163 C426.420,0.163 429.315,1.265 429.315,3.965 C429.315,5.759 428.041,6.796 426.442,7.358 C428.170,7.963 429.553,9.302 429.553,11.052 C429.553,13.731 426.787,15.049 423.763,15.049 ZM423.763,2.799 C422.337,2.799 421.321,3.404 421.321,4.441 C421.321,5.521 422.877,6.018 423.763,6.148 C424.648,6.018 426.182,5.521 426.182,4.441 C426.182,3.404 425.167,2.799 423.763,2.799 ZM423.763,8.740 C422.855,8.870 421.083,9.453 421.083,10.663 C421.083,11.722 422.250,12.413 423.763,12.413 C425.232,12.413 426.442,11.722 426.442,10.663 C426.442,9.453 424.648,8.870 423.763,8.740 ZM371.381,14.790 L376.545,3.079 L369.285,3.079 L369.285,0.379 L380.110,0.379 L380.110,2.518 L374.751,14.790 L371.381,14.790 ZM322.363,5.413 C324.956,5.413 327.268,7.033 327.268,10.102 C327.268,12.910 325.043,15.049 321.758,15.049 C317.372,15.049 315.536,11.679 315.536,7.617 C315.536,3.252 317.999,0.163 322.255,0.163 C324.005,0.163 325.475,0.768 326.512,1.653 L325.129,4.009 C324.351,3.274 323.530,2.885 322.255,2.885 C320.138,2.885 318.647,4.678 318.647,6.969 C318.647,7.077 318.647,7.163 318.669,7.271 C319.338,6.299 320.786,5.413 322.363,5.413 ZM321.586,12.327 C323.249,12.327 324.157,11.225 324.157,10.210 C324.157,8.697 322.860,8.049 321.477,8.049 C320.397,8.049 319.360,8.546 318.669,9.410 C318.798,10.793 319.576,12.327 321.586,12.327 ZM270.593,5.391 C273.034,5.391 275.216,7.141 275.216,10.058 C275.216,13.126 272.926,15.049 269.447,15.049 C266.941,15.049 265.126,14.228 263.895,12.889 L265.601,10.750 C266.574,11.765 267.913,12.327 269.426,12.327 C271.133,12.327 272.105,11.355 272.105,10.188 C272.105,8.913 271.154,8.049 269.512,8.049 C268.324,8.049 267.352,8.395 266.487,9.216 L264.348,8.654 L264.348,0.379 L274.244,0.379 L274.244,3.079 L267.416,3.079 L267.416,6.601 C268.108,5.910 269.275,5.391 270.593,5.391 ZM219.449,14.790 L216.381,14.790 L216.381,11.808 L209.489,11.808 L209.489,9.389 L215.215,0.379 L219.449,0.379 L219.449,9.108 L221.308,9.108 L221.308,11.808 L219.449,11.808 L219.449,14.790 ZM216.381,3.101 L212.492,9.108 L216.381,9.108 L216.381,3.101 ZM164.614,15.049 C161.956,15.049 159.990,14.034 158.932,12.738 L160.530,10.685 C161.524,11.722 163.102,12.327 164.506,12.327 C166.256,12.327 167.228,11.571 167.228,10.490 C167.228,9.345 166.343,8.827 164.333,8.827 C163.728,8.827 162.756,8.848 162.540,8.870 L162.540,6.104 C162.799,6.126 163.793,6.126 164.333,6.126 C165.932,6.126 166.991,5.651 166.991,4.592 C166.991,3.447 165.824,2.885 164.312,2.885 C162.929,2.885 161.676,3.404 160.660,4.376 L159.126,2.453 C160.293,1.135 162.108,0.163 164.636,0.163 C168.006,0.163 170.080,1.675 170.080,4.073 C170.080,5.888 168.525,7.077 166.926,7.358 C168.395,7.509 170.297,8.654 170.297,10.815 C170.297,13.299 168.071,15.049 164.614,15.049 ZM106.550,12.392 C112.448,8.027 114.177,6.536 114.177,4.765 C114.177,3.512 113.032,2.885 111.843,2.885 C110.201,2.885 108.948,3.533 107.976,4.549 L106.226,2.518 C107.630,0.897 109.769,0.163 111.778,0.163 C114.846,0.163 117.288,1.891 117.288,4.765 C117.288,7.228 115.257,9.367 111.519,12.089 L117.396,12.089 L117.396,14.790 L106.550,14.790 L106.550,12.392 ZM59.111,4.333 L56.713,6.774 L54.963,4.938 L59.500,0.379 L62.180,0.379 L62.180,14.790 L59.111,14.790 L59.111,4.333 ZM1.573,7.595 C1.573,3.879 3.409,0.163 7.536,0.163 C11.641,0.163 13.500,3.879 13.500,7.595 C13.500,11.312 11.641,15.049 7.536,15.049 C3.409,15.049 1.573,11.312 1.573,7.595 ZM7.536,2.885 C5.462,2.885 4.684,4.938 4.684,7.595 C4.684,10.253 5.462,12.327 7.536,12.327 C9.589,12.327 10.367,10.253 10.367,7.595 C10.367,4.938 9.589,2.885 7.536,2.885 Z"
                  />
                </g>
              </g>
            </g>
            <g
              className={`timer-countdown ${
                this.state.counterCharged ? 'charged' : ''
              }`}
            >
              <path
                fill-rule="evenodd"
                fill="rgb(254, 127, 132)"
                d="M284.000,202.000 L82.000,202.000 C36.713,202.000 0.000,165.287 0.000,120.000 C0.000,74.713 36.713,38.000 82.000,38.000 L152.177,38.000 C156.430,29.571 165.400,10.696 168.140,5.099 C171.426,-1.611 177.186,-0.469 179.366,3.818 C181.210,7.443 191.587,28.840 196.001,38.000 L284.000,38.000 C329.287,38.000 366.000,74.713 366.000,120.000 C366.000,165.287 329.287,202.000 284.000,202.000 Z"
              />
              <path
                fill-rule="evenodd"
                fill="rgb(156, 31, 65)"
                d="M81.500,54.000 L282.500,54.000 C319.227,54.000 349.000,83.773 349.000,120.500 C349.000,157.227 319.227,187.000 282.500,187.000 L81.500,187.000 C44.773,187.000 15.000,157.227 15.000,120.500 C15.000,83.773 44.773,54.000 81.500,54.000 Z"
              />
              <path
                fill-rule="evenodd"
                fill="rgb(108, 8, 29)"
                d="M81.000,63.000 L282.000,63.000 C313.480,63.000 339.000,88.520 339.000,120.000 L339.000,120.000 C339.000,151.480 313.480,177.000 282.000,177.000 L81.000,177.000 C49.520,177.000 24.000,151.480 24.000,120.000 L24.000,120.000 C24.000,88.520 49.520,63.000 81.000,63.000 Z"
              />
            </g>
          </svg>
          <div className="interactive-controls">
            <div className="lx-group">
              <div className="checkbox">
                <div className="icon"></div>
              </div>
              <input
                type="text"
                className="task-name"
                placeholder={'Type to add a task...'}
                value={this.state.cTaskName}
                onChange={(e) => this.handleTaskNameChange(e)}
                ref={this.taskNameField}
              />
            </div>
            <div className="task-completion">
              <div className="c-pomodoro">1</div>
              <div className="separator">/</div>
              <div className="a-pomodoro">
                <input
                  type="text"
                  className="a-pomodoroField"
                  placeholder={'3'}
                  value={this.state.tPomodoros}
                  onChange={(e) => this.handleTotalPomodorosChange(e)}
                  ref={this.tPomodorosField}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }
}

export default PomodoroTimer;
